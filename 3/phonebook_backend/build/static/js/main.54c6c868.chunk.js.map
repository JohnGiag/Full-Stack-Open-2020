{"version":3,"sources":["components/Search.js","components/AddContactForm.js","components/Contacts.js","services/phonebook.js","components/Footer.js","components/Notification.js","App.js","index.js"],"names":["Search","value","onChange","AddContactForm","props","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","Contacts","persons","serachValue","deleteContact","filter","person","name","toLowerCase","includes","map","p","i","key","number","onClick","id","baseUrl","getAll","axios","get","then","response","data","newResource","post","put","delete","Footer","text","style","color","fontStyle","fontSize","Notification","message","className","App","useState","setPersons","setNewName","setnNewNumber","setSearchValue","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","phonebookService","initialData","event","target","preventDefault","personObject","oldPersonObject","find","some","window","confirm","updatedContact","setTimeout","catch","error","newPerson","concat","updatedContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54c6c868.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Search = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      Seacrh: <input value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst AddContactForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;\r\n","import React from \"react\";\r\n\r\nconst Contacts = ({ persons, serachValue , deleteContact }) => {\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Number</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {persons\r\n          .filter((person) => person.name.toLowerCase().includes(serachValue.toLowerCase()))\r\n          .map((p,i) => (\r\n            <tr key={i}>\r\n              <td> {p.name} </td>\r\n              <td>{p.number}</td>\r\n              <td><button onClick={() => deleteContact(p.id)}>delete</button></td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newResource) => {\r\n  const request = axios.post(baseUrl, newResource);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newResource) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newResource);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deleteResource = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(() => getAll())\r\n}\r\n\r\n\r\nexport default { getAll, create, update , deleteResource };\r\n","import React from \"react\";\r\n\r\nconst Footer = ({text}) => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        {text}\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message,type }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={type}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport Search from \"./components/Search\";\nimport AddContactForm from \"./components/AddContactForm\";\nimport Contacts from \"./components/Contacts\";\nimport phonebookService from \"./services/phonebook\";\nimport Footer from \"./components/Footer\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setnNewNumber] = useState(\"\");\n  const [serachValue, setSearchValue] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [notificationType, setNotificationType] = useState(\"success\");\n\n  //load data from db\n  useEffect(() => {\n    phonebookService.getAll().then((initialData) => {\n      setPersons(initialData);\n    });\n  }, []);\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n\n  const handleNumberChange = (event) => setnNewNumber(event.target.value);\n\n  const handleSearch = (event) => setSearchValue(event.target.value);\n\n  const updateOrAddToPhoneBook = (event) => {\n    event.preventDefault();\n    //update number in already existing contact\n    let personObject = { name: newName, number: newNumber };\n    let oldPersonObject = persons.find((p) => p.name === newName);\n    if (persons.some((p) => p.name === newName)) {\n      const confirm = window.confirm(\n        `${newName} is already in the phonebook, replace old number with new number ?`\n      );\n      if (confirm) {\n        personObject.id = oldPersonObject.id;\n        phonebookService\n          .update(oldPersonObject.id, personObject)\n          .then((updatedContact) => {\n            setPersons(\n              persons.map((p) =>\n                p.id === oldPersonObject.id ? personObject : p\n              )\n            );\n            setNotificationType(\"success\");\n            setNotificationMessage(`Updated '${personObject.name}'`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 3000);\n          })\n          .catch((error) => {\n            setNotificationType(\"error\");\n            setNotificationMessage(\n              `${personObject.name}' has been removed from the phonebook`\n            );\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 3000);\n            setPersons(persons.filter((p) => p.id !== oldPersonObject.id));\n          });\n      }\n    } else {\n      //add new contact\n      phonebookService.create(personObject).then((newPerson) => {\n        setPersons(persons.concat(newPerson));\n        setNewName(\"\");\n        setnNewNumber(\"\");\n        setNotificationType(\"success\");\n        setNotificationMessage(`Added '${personObject.name}'`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 3000);\n      });\n    }\n  };\n\n  const deleteContact = (id) => {\n    const person = persons.find((p) => p.id === id);\n    const confirm = window.confirm(`Delete ${person.name} ?`);\n    if (confirm) {\n      phonebookService.deleteResource(id)\n      .then((updatedContacts) => {\n        setPersons(updatedContacts);\n        setNotificationType(\"success\");\n        setNotificationMessage(`Deleted '${person.name}'`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 3000);\n      })\n      .catch((error) => {\n        setNotificationType(\"error\");\n        setNotificationMessage(\n          `${person.name}' has already been removed from the phonebook`\n        );\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 3000);\n        setPersons(persons.filter((p) => p.id !== person.id));\n      });;\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notificationMessage} type={notificationType} />\n\n      <Search value={serachValue} onChange={handleSearch} />\n      <AddContactForm\n        onSubmit={updateOrAddToPhoneBook}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Contacts</h2>\n      <Contacts\n        persons={persons}\n        serachValue={serachValue}\n        deleteContact={deleteContact}\n      />\n      <Footer text=\"Phonebook app, JohnGiag 2020\" />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}