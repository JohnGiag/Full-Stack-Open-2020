{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","text","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","i","key","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteToPush","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAaeA,EAXF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UACjB,qBAAuB,iBACvB,OACI,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCS7B,EAdF,WAEX,OADgBK,IAAMC,IAHV,cAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY5B,EATA,SAAAC,GAEb,OADgBL,IAAMM,KARV,aAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO5B,EAJA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbJ,aAaI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCH9BK,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAGtB,OAAgB,OAAZA,EACK,KAGF,yBAAKb,UAAU,SAASa,ICUlBC,EAjBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAOf,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,4BACGJ,KC2EMK,EAlFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAAqB1B,MAAK,SAAC2B,GACzBC,QAAQC,IAAI,qBACZX,EAASS,QAEV,IACHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAAMC,EAAcV,EAChBJ,EACAA,EAAMe,QAAO,SAACzC,GAAD,OAA6B,IAAnBA,EAAKG,aA0ChC,OACE,6BACE,qCACA,6BACA,kBAAC,EAAD,CAAcc,QAASe,IACvB,4BACGQ,EAAYE,KAAI,SAAC1C,EAAM2C,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACL3C,KAAMA,EACNC,iBAAkB,kBAhDD,SAACa,GAC1B,IAAMd,EAAO0B,EAAMmB,MAAK,SAACC,GAAD,OAAOA,EAAEhC,KAAOA,KAClCiC,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDgC,EAAmBrB,EAAIiC,GAAatC,MAAK,SAACsC,GACxCpB,EAASD,EAAMgB,KAAI,SAAC1C,GAAD,OAAWA,EAAKc,KAAOA,EAAKd,EAAO+C,SAEvDC,OAAM,SAAAC,GACLhB,EAAgB,SAAD,OACJjC,EAAKK,QADD,sCAGf6C,YAAW,WACTjB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAK,GAAC,OAAIA,EAAEhC,KAAOA,SAkCNqC,CAAmBnD,EAAKc,WAItD,0BAAMsC,SAlCM,SAACC,GACfA,EAAMC,iBACN,IAAIC,EAAa,CACflD,QAASuB,EACT4B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAG7BzB,EACQoB,GACP9C,MAAK,SAAAmB,GACJD,EAASD,EAAMmC,OAAOjC,IACtBC,EAAW,SAuBT,2BAAOiC,MAAOlC,EAASmC,SAnBJ,SAACV,GACxBxB,EAAWwB,EAAMW,OAAOF,UAiBtB,iBAC2E,4BAAQG,KAAK,UAAb,SAE3E,4BAAQ3D,QAzDO,kBAAMyB,GAAYD,KAyDjC,QAAmCA,EAAU,YAAc,QAE3D,kBAAC,EAAD,CAAQX,KAAK,+BCzEnB+C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5546da62.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({note, toggleImportance }) =>{\r\n  const label = note.important\r\n  ? 'make not important' : 'make important'\r\n    return(\r\n        <li className=\"note\">\r\n          {note.content}\r\n          <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note;","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  export default { getAll, create, update }","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  \r\n\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Footer = ({text}) => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        {text}\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Note from \"./components/Note\";\r\nimport noteService from \"./services/notes\";\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((initialNotes) => {\r\n      console.log(\"promise fulfilled\");\r\n      setNotes(initialNotes);\r\n    });\r\n  }, []);\r\n  console.log(\"render\", notes.length, \"notes\");\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter((note) => note.important === true);\r\n\r\n  const toggleView = () => setShowAll(!showAll);\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService.update(id, changedNote).then((changedNote) => {\r\n      setNotes(notes.map((note) => (note.id !== id ? note : changedNote)));\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `Note '${note.content}' was already removed from server`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 100)\r\n      setNotes(notes.filter(n => n.id !== id))\r\n    })\r\n  };\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    let noteToPush = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    };\r\n\r\n    noteService\r\n    .create(noteToPush)\r\n    .then(newNote => {\r\n      setNotes(notes.concat(newNote))\r\n      setNewNote('')\r\n    })\r\n  };\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <div>\r\n      <Notification message={errorMessage} />\r\n      <ul>\r\n        {notesToShow.map((note, i) => (\r\n          <Note\r\n            key={i}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} /> &nbsp;&nbsp;&nbsp; <button type=\"submit\">save</button>\r\n      </form>\r\n      <button onClick={toggleView}>show {showAll ? \"important\" : \"all\"}</button>\r\n      </div>\r\n      <Footer text=\"Notes App, JohnGiag 2020\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\"\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}